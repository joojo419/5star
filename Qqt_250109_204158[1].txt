Creating a login system for a clothing website that captures user details like name, contact, location, and an option to select between pickup and delivery can be done with HTML, CSS, and JavaScript for the frontend, along with a backend server for data storage and processing. Hereâ€™s a step-by-step implementation outline:

---

Frontend Code:

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>5Star Clothing Login</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f5f5f5;
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }
        .login-container {
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            width: 400px;
        }
        .login-container h2 {
            text-align: center;
            margin-bottom: 20px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        .form-group label {
            display: block;
            margin-bottom: 5px;
        }
        .form-group input, .form-group select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
        .radio-group {
            display: flex;
            justify-content: space-between;
            margin-top: 10px;
        }
        .radio-group input {
            margin-right: 5px;
        }
        button {
            width: 100%;
            padding: 10px;
            background-color: #5cb85c;
            border: none;
            border-radius: 5px;
            color: #fff;
            font-size: 16px;
            cursor: pointer;
        }
        button:hover {
            background-color: #4cae4c;
        }
    </style>
</head>
<body>
    <div class="login-container">
        <h2>5Star Clothing Login</h2>
        <form id="loginForm">
            <div class="form-group">
                <label for="name">Name</label>
                <input type="text" id="name" name="name" placeholder="Enter your name" required>
            </div>
            <div class="form-group">
                <label for="contact">Contact</label>
                <input type="tel" id="contact" name="contact" placeholder="Enter your contact number" required>
            </div>
            <div class="form-group">
                <label for="location">Location</label>
                <input type="text" id="location" name="location" placeholder="Enter your location" required>
            </div>
            <div class="form-group">
                <label>Service Type</label>
                <div class="radio-group">
                    <label><input type="radio" name="service" value="pickup" required> Pickup</label>
                    <label><input type="radio" name="service" value="delivery" required> Delivery</label>
                </div>
            </div>
            <button type="submit">Submit</button>
        </form>
    </div>

    <script>
        document.getElementById('loginForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const formData = new FormData(event.target);

            const user = {
                name: formData.get('name'),
                contact: formData.get('contact'),
                location: formData.get('location'),
                service: formData.get('service')
            };

            console.log("User Information:", user);

            // Here, you can send the data to the server
            alert('Thank you for logging in, ' + user.name + '! Your service preference: ' + user.service);
        });
    </script>
</body>
</html>

---

Features:

1. Input Fields: For name, contact, and location.

2. Radio Buttons: Allow the user to select either "Pickup" or "Delivery."

3. Validation: Ensures all fields are filled before submission.

4. JavaScript Form Handling: Logs user information and allows further backend integration.

---

Backend Setup:

Use Node.js, Python Flask/Django, or PHP for backend services.

Create an API endpoint to handle the form submission.

Store the data in a database (e.g., MySQL, MongoDB).

Example Backend Endpoint (Node.js with Express):

const express = require('express');
const bodyParser = require('body-parser');
const app = express();

app.use(bodyParser.json());

app.post('/login', (req, res) => {
    const { name, contact, location, service } = req.body;

    // Here you can save the data to your database
    console.log('User Data:', { name, contact, location, service });

    res.json({ message: 'Login successful!' });
});

app.listen(3000, () => {
    console.log('Server running on http://localhost:3000');
});

---

Next Steps:

1. Integrate the backend API with the frontend using fetch or axios.

2. Add validation for secure data submission.

3. Style the interface to match your brand.

Would you like me to help with backend implementation or advanced features like authentication?